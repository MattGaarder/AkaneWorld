/* CSS comments are also useful for
temporarily hiding style declarations
in the design process. When I am
trying out a number of styles, I can
quickly switch styles off by enclosing
them in /* and (see below) check the design
in a browser, then remove the
comment characters to make the
style appear again. */

/* These are the order of properties when describing in the font declaration.

Once you’ve met the size and family requirements, the other values are
optional and may appear in any order prior to the font-size. When style,
weight, stretch, or variant is omitted, its value is set to normal.
{ font: style weight stretch variant size/line-height font-family; } 

line-height adjusts the height of the text line and is used to add space between
lines of text. It appears just after font-size, separated by a slash.
h3 { font: oblique bold small-caps 1.5em/1.8em Verdana, sans-serif; }
h2 { font: bold 1.75em/2 sans-serif; }

h1 {
font: bold 1.5em "Marko One",
Georgia, serif;
}

The id attribute can be used with any element, and it is commonly used to give meaning to
the generic div and span elements. ID selectors allow you to target elements
by their id values. 
Here is an example of a list item with an id reference:

<li id="sleestak">Sleestak T-shirt</li>

Now you can write a style rule just for that list item using an ID selector, like
so (notice the # preceding the id reference):

li#sleestak { color: olive; }

Because id values must be unique in the document, it is acceptable to omit
the element name. The following rule is equivalent to the last one:

#sleestak { color: olive; }

You can also use an ID selector as part of a contextual selector. In this
example, a style is applied only to a elements that appear within the element
identified as “resources.” In this way, you can treat links in the element named
“resources” differently than all the other links on the page without any additional
markup.

#resources a { text-decoration: none; }

Child selector
A child selector is similar to a descendant selector, but it targets only the direct
children of a given element. There may be no other hierarchical levels in between.
They are indicated with the greater-than symbol (>). The following rule affects
emphasized text, but only when it is directly contained in a p element. An em element
inside a link (a) within the paragraph would not be affected.

p > em {font-weight: bold;}

You can target elements belonging to the same class with—you guessed it—a
class selector. Class names are indicated with a period (.) at the beginning
of the selector. For example, to select all paragraphs with class="special",
use this selector (the period indicates the following word is a class selector):

p.special { color: orange; }

.special { color: orange; }
. to mark that special is the class name, the declaration effects all elements with this class

This list of selector types from most to least specific should serve you well
in most scenarios:
• Inline styles with the style attribute are more specific than (and will
override…)
• ID selectors, which are more specific than (and will override…)
• Class selectors, which are more specific than (and will override…)
• Individual element selectors

The universal element selector (*) matches any element , like a
wildcard in programming languages. The style rule

* { border: 1px solid gray; }

puts a 1-pixel gray border around every element in the
document. It is also useful as a contextual selector, as shown in
this example that selects all elements in an “intro” section:

#intro * { color: gray; }

*/


body {
	margin: 2em 5%; 
    font-family: 'Roboto', sans-serif;
    background-color: #fae8f7;
    color: rgb(235, 106, 235);
    }
body {
    margin-top: 0;
    padding: 3em 1em 2em 1em;
    background-color: rgba(255,255,255,.5);
    background-image: url(ezgif.com-gif-maker.gif);
    background-repeat: repeat-x;
    background-position: 250px top;
        }
    
h1 {
    font-size: 1.5em;
    text-align: center;
    }
h2 {
    font-size: 1em;
    font-family: 'Roboto', sans-serif;
    text-align: center;
    }
dt { font-weight: bold; }

p { border: 1px solid blue; }
p::first-letter { font-size: 300%; color: orange; }

h1, h2 {	
	color: rgb(180, 115, 206);}

h2 {
	font-family: Verdana, Geneva, sans-serif;
	font-size: 1em;
}
small {
	color: #999;
}
.goodthings { color: rgb(43, 230, 230); text-align: center;}

a:link {
    color: maroon;
    }
    a:visited {
    color: gray;
    }
a:hover {
    color: rgb(113, 8, 76);
    background-color: #896565;
        }
/* How to succesfully link font to site */

@font-face {
    font-family: 'Roboto';
    src: url('AkaneWorld/Assets/Roboto/Roboto-Regular.ttf');


/*
This is the required order for pseudo-classes

a { text-decoration: none; } / turns underlines off for all links /
a:link { color: maroon; }
a:visited { color: gray; }
a:focus { color: maroon; background-color: #ffd9d9; }
a:hover { color: maroon; background-color: #ffd9d9; }
a:active { color: red; background-color: #ffd9d9; }

The following code is an example of a pseudo-element. Double or single colon can be used.

p.warning::before {
content: url(exclamation.png);
margin-right: 6px;
}
p.warning::after {
content: " Thank you.";
color: red;
}

Note the space before Thank you. Spaces must be included within the quotation marks if desired.
*/

/* These examples show three different ways to make the line height twice the
height of the font size: */

    p { line-height: 2; }
    p { line-height: 2em; }
    p { line-height: 200%; }



/* white-space (CSS2) Specifies how whitespace
in the element source is handled in layout. For
example, the pre value preserves the character
spaces and returns found in the source, similar
to the pre HTML element. 

List Item Display Role
You may have noticed that the list
style properties apply to “elements
whose display value is list-item.”
The CSS2.1 specification allows any
element to perform like a list item by
setting its display property to listitem.
This property can be applied
to any HTML element or elements in
other XML languages. For example,
you could automatically bullet or
number a series of paragraphs by
setting the display property of
paragraph (p) elements to listitem,
as shown in this example:

p.lettered {
display: list-item;
list-style-type: upper-alpha;
}

ul {
list-style-type: disc;
list-style-image: url(/images/rainbow.gif);
list-style-position: outside;
}*/

/*
h1 { border: 1px solid blue; }
h2 { border: 1px solid blue; }

p { border: 1px solid blue; }
em { border: 1px solid blue; }
img { border: 1px solid blue;
        width: 20vw;
        height: 20vh; }

body {
    background-color: #ffe1f3;
    margin: 0 10%;
    font-family: Arial, Helvetica, sans-serif;
    }
    
    
    h1 {
    text-align: center;
    font-family: sans-serif;
    font-weight: normal;
    text-transform: uppercase;
    border-bottom: 1px solid #990091;
    margin-top: 30px;
    } 
    h2 {
    color: #ff0000;
    font-size: 1em;
    }
    p {
    font-size: large;
    font-family: sans-serif;
    margin-left: 100px;
    }
    td, th {
    border: 10px solid gray;
    }
    </style>